group 'io.codecov'
version '1.0'

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 18
targetCompatibility = 18

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "junit:junit:4.13"
}

test {
    afterTest { desc, result -> 
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }
    def fileFilter = ['**/R.class',
                      '**/R$*.class', '**/*$InjectAdapter.*',
                      '**/*$ModuleAdapter.*',
                      '**/Dao*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*MembersInjector*.*',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*$Lambda$*.',
                      '**/*Factory*.',
                      '**/*$Builder*',
                      '**/*$Parcelable*.*',
                      '**/*DaggerApplicationComponent*.*',
                      '**/api',
                      '**/android/**/*.*',
                      '**/me/**/*.*', '**/org/**/*.*', '**/org/**/*.*']

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes/br", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java/br"
    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes:
            ['**/**/*.exec', '**/**/*.ec'])
}
check.dependsOn jacocoTestReport
